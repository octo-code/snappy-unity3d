<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{15519b07-603e-497b-904c-2d42c403519e}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <ProjectName>snappy</ProjectName>
    <RootNamespace>RenderingPlugin</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "snappy" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "snappy" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "snappy" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"


)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|arm'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "snappy" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\unity\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "RenderingPlugin" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"

  mkdir "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets"
  copy /Y "$(TargetDir)SimpleVertexShader.cso" "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets\SimpleVertexShader.cso"
  copy /Y "$(TargetDir)SimplePixelShader.cso" "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets\SimplePixelShader.cso"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
  copy /Y "$(TargetDir)SimpleVertexShader.cso" "$(SolutionDir)$(SolutionName)\Data\StreamingAssets\SimpleVertexShader.cso"
  copy /Y "$(TargetDir)SimplePixelShader.cso" "$(SolutionDir)$(SolutionName)\Data\StreamingAssets\SimplePixelShader.cso"
)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <PreprocessorDefinitions>_WINDLL;SUPPORT_D3D11;UNITY_METRO;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
    </Link>
    <PostBuildEvent>
      <Command>if "$(SolutionName)" == "RenderingPlugin" (
  echo Copying plugin files to Unity project
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins"
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro"
  mkdir "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro\$(PlatformShortName)"
  copy /Y "$(TargetPath)" "$(SolutionDir)..\..\UnityProject\Assets\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"

  mkdir "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets"
  copy /Y "$(TargetDir)SimpleVertexShader.cso" "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets\SimpleVertexShader.cso"
  copy /Y "$(TargetDir)SimplePixelShader.cso" "$(SolutionDir)..\..\UnityProject\Assets\StreamingAssets\SimplePixelShader.cso"
) ELSE (
  echo Copying plugin files to $(SolutionName) solution

  mkdir "$(SolutionDir)$(SolutionName)\Plugins"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro"
  mkdir "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)"

  copy /Y "$(TargetPath)" "$(SolutionDir)$(SolutionName)\Plugins\Metro\$(PlatformShortName)\$(TargetFileName)"
  copy /Y "$(TargetDir)SimpleVertexShader.cso" "$(SolutionDir)$(SolutionName)\Data\StreamingAssets\SimpleVertexShader.cso"
  copy /Y "$(TargetDir)SimplePixelShader.cso" "$(SolutionDir)$(SolutionName)\Data\StreamingAssets\SimplePixelShader.cso"
)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\snappy-c.cc" />
    <ClCompile Include="..\snappy-sinksource.cc" />
    <ClCompile Include="..\snappy-stubs-internal.cc" />
    <ClCompile Include="..\snappy.cc" />
    <ClCompile Include="dllmain.cpp" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\snappy-c.h" />
    <ClInclude Include="..\snappy-internal.h" />
    <ClInclude Include="..\snappy-sinksource.h" />
    <ClInclude Include="..\snappy-stubs-internal.h" />
    <ClInclude Include="..\snappy.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\snappy-stubs-public.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>